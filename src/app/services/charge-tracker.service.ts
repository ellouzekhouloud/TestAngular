import { Injectable } from '@angular/core';

@Injectable({
  providedIn: 'root'
})
export class ChargeTrackerService {

  private readonly CHARGE_ID_KEY = 'currentChargeId';
  private readonly PERSONNEL_ID_KEY = 'personnelId';

  constructor() {}

  // üîπ Enregistrer un id de charge
  setChargeId(id: number, storageType: 'local' | 'session' = 'local'): void {
    if (storageType === 'local') {
      localStorage.setItem(this.CHARGE_ID_KEY, id.toString());
      console.log("‚úÖ Charge ID enregistr√© dans localStorage :", id);
    } else {
      sessionStorage.setItem(this.CHARGE_ID_KEY, id.toString());
      console.log("‚úÖ Charge ID enregistr√© dans sessionStorage :", id);
    }
  }

  // üîπ R√©cup√©rer l‚Äôid de charge
  getChargeId(): number | null {
    // V√©rification dans localStorage
    let id = localStorage.getItem(this.CHARGE_ID_KEY);
    if (id) {
      console.log("‚úÖ Charge ID trouv√© dans localStorage :", id);
      return Number(id);
    }

    // V√©rification dans sessionStorage si non trouv√©
    id = sessionStorage.getItem(this.CHARGE_ID_KEY);
    if (id) {
      console.log("‚úÖ Charge ID trouv√© dans sessionStorage :", id);
      return Number(id);
    }

    console.warn("‚ö†Ô∏è Aucun Charge ID trouv√© ni dans localStorage, ni dans sessionStorage");
    return null;
  }

  // üîπ Supprimer l‚Äôid de charge
  clearChargeId(): void {
    localStorage.removeItem(this.CHARGE_ID_KEY);
    sessionStorage.removeItem(this.CHARGE_ID_KEY);
    console.log("üóëÔ∏è Charge ID supprim√© des deux stockages");
  }

  // üîπ Enregistrer l‚Äôid du personnel
  setPersonnelId(id: number, storageType: 'local' | 'session' = 'local'): void {
    if (storageType === 'local') {
      localStorage.setItem(this.PERSONNEL_ID_KEY, id.toString());
      console.log("‚úÖ ID enregistr√© dans localStorage :", id);
    } else {
      sessionStorage.setItem(this.PERSONNEL_ID_KEY, id.toString());
      console.log("‚úÖ ID enregistr√© dans sessionStorage :", id);
    }
  }

  // üîπ R√©cup√©rer l‚Äôid du personnel
  getPersonnelId(): number | null {
    // 1Ô∏è‚É£ V√©rification dans localStorage
    let id = localStorage.getItem(this.PERSONNEL_ID_KEY);
    if (id) {
      console.log("‚úÖ ID trouv√© dans localStorage :", id);
      return Number(id);
    }
  
    // 2Ô∏è‚É£ Si non trouv√©, on v√©rifie dans sessionStorage
    id = sessionStorage.getItem(this.PERSONNEL_ID_KEY);
    if (id) {
      console.log("‚úÖ ID trouv√© dans sessionStorage :", id);
      return Number(id);
    }
  
    console.warn("‚ö†Ô∏è Aucun ID trouv√© ni dans localStorage, ni dans sessionStorage");
    return null;
  }

  // üîπ Nettoyer tout (par exemple √† la d√©connexion)
  clearAll(): void {
    localStorage.removeItem(this.CHARGE_ID_KEY);
    localStorage.removeItem(this.PERSONNEL_ID_KEY);
    sessionStorage.removeItem(this.CHARGE_ID_KEY);
    sessionStorage.removeItem(this.PERSONNEL_ID_KEY);
  }
}
